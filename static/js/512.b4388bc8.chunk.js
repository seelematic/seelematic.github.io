self.onmessage=function(t){const{type:e,data:n,width:l,height:r,originalBuffer:o,blurredBuffer:f,adjustedPolygon:y,polygonB:a,numPixelsSimulatedBlur:i,totalBlurBlend:u}=t.data;if("processBlur"===e){let x=new Uint8ClampedArray(n);const g=new Uint8ClampedArray(o),d=new Uint8ClampedArray(f);function h(t,e,n){const l=(n.x-e.x)**2+(n.y-e.y)**2;if(0===l)return Math.hypot(t.x-e.x,t.y-e.y);let r=((t.x-e.x)*(n.x-e.x)+(t.y-e.y)*(n.y-e.y))/l;r=Math.max(0,Math.min(1,r));const o=e.x+r*(n.x-e.x),f=e.y+r*(n.y-e.y);return Math.hypot(t.x-o,t.y-f)}function s(t,e,n){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2,r=!1;for(let o=0,f=n.length-1;o<n.length;f=o++){const l=n[o].x,y=n[o].y,a=n[f].x,i=n[f].y;y>e!==i>e&&t<(a-l)*(e-y)/(i-y)+l&&(r=!r)}if(r)return!0;for(let o=0;o<n.length;o++)if(h({x:t,y:e},n[o],n[(o+1)%n.length])<=l)return!0;return!1}for(let c=0;c<r;c++)for(let p=0;p<l;p++)if(s(p,c,y,3*i)||s(p,c,a,3*i)){const m={x:p,y:c};let B=1/0;for(let A=0;A<y.length;A++){const C=h(m,y[A],y[(A+1)%y.length]);C<B&&(B=C)}for(let U=0;U<a.length;U++){const P=h(m,a[U],a[(U+1)%a.length]);P<B&&(B=P)}const M=i,w=Math.exp(-B*B/(2*M*M))*u,b=4*(c*l+p);x[b]=w*d[b]+(1-w)*g[b],x[b+1]=w*d[b+1]+(1-w)*g[b+1],x[b+2]=w*d[b+2]+(1-w)*g[b+2],x[b+3]=w*d[b+3]+(1-w)*g[b+3]}postMessage({modifiedBuffer:x.buffer},[x.buffer])}};
//# sourceMappingURL=512.b4388bc8.chunk.js.map